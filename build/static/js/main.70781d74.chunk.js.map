{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","applyFilter","filter","onChange","event","target","value","toLowerCase","PersonForm","handleOnSubmit","handleName","handleNumber","name","number","onSubmit","id","autoFocus","test","type","Persons","selectPersons","removePerson","map","person","key","onClick","Notification","message","notificationStyle","color","className","style","text","baseUrl","axios","get","then","response","data","post","delete","updatedPerson","put","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","setFilter","setMessage","useEffect","personService","sendNotification","setTimeout","preventDefault","newPerson","find","question","window","confirm","catch","err","createdPerson","document","querySelector","focus","indexOf","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.70781d74.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({applyFilter, filter}) => {\n    const handleChange = (event) => {\n        applyFilter(event.target.value.toLowerCase());\n    }\n    return (\n    <div>\n        filter shown with <input onChange={handleChange} value={filter} />\n    </div>\n    )\n};\n\nexport default Filter;","import React from 'react';\n\nconst PersonForm = ({handleOnSubmit, handleName, handleNumber, name, number}) => {\n\n  const handleNumberChange = (event) => !/[^\\d\\-\\s]|\\s\\s+|--+|^-|^\\s|\\s-+|-\\s+/g.test(event.target.value) && handleNumber(event.target.value) \n\n  return (\n    <form onSubmit={(event) => handleOnSubmit(event)}>\n      <div>\n        name: <input id='name-input' onChange={(event) => handleName(event.target.value)} value={name} autoFocus />\n      </div>\n      <div>\n        number: <input onChange={handleNumberChange} value={number} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm;","import React from 'react';\n\nconst Persons = ({ selectPersons, removePerson }) => {\n\n    return selectPersons()\n        .map(person =>\n            <div key={person.name}>\n                <label>{person.name} {person.number} </label>\n                <button onClick={() => removePerson(person.id)}>delete</button>\n            </div>\n            );\n}\n\nexport default Persons;","import React from 'react'\n\nconst Notification = ({ message }) => {\n    if (message === null) return null\n\n    let notificationStyle = {}\n    if (message.type === 'success') notificationStyle = { color: \"green\" }\n    if (message.type === 'error') notificationStyle = { color: \"red\" }\n    \n    return (\n        <div className='notification' style={notificationStyle}>\n            {message.text}\n        </div>\n    )\n}\n\nexport default Notification","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = (name, number) => {\n    const request = axios.post(baseUrl, { name, number })\n    return request.then(response => response.data)\n}\n\nconst remove = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\nconst update = (id, updatedPerson) => {\n    const request = axios.put(`${baseUrl}/${id}`, updatedPerson)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, remove, update }\n","import React, { useEffect, useState } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [persons, setPersons] = useState([]) \n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [filter, setFilter] = useState('');\n  const [message, setMessage] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(response => setPersons(response))\n  }, [])\n\n  const sendNotification = (message) => {\n    setMessage(message)\n    setTimeout(() => setMessage(null), 5000)\n  }\n\n  const selectPersons = () => {\n    return persons.filter(person => person.name.toLowerCase().indexOf(filter) !== -1); \n  }\n\n  const addPerson = (event) => {\n    event.preventDefault();\n\n    const newPerson = persons.find(person => person.name === newName)\n    const question = `${newName} is already added to phonebook, replace the old number with a new one?`\n\n    if (newPerson) {\n      if (window.confirm(question)) {\n        personService\n          .update(newPerson.id, { ...newPerson, number: newNumber })\n          .then(response => {\n            setPersons(persons.map(person => person.id === newPerson.id ? response : person))\n            setNewName('')\n            setNewNumber('')\n            sendNotification({ text: `Updated number for ${newName}`, type: 'success' })\n          })\n          .catch(err => {\n            setPersons(persons.filter(person => person.id !== newPerson.id))\n            sendNotification({ text: `Information of ${newName} has already been removed from server`, type: 'error' })\n          })\n      } \n    }\n\n    else personService\n      .create(newName, newNumber)\n      .then(createdPerson => {\n        setPersons([...persons, createdPerson]);\n        setNewName('');\n        setNewNumber('');\n        sendNotification({ text: `Added ${newName}`, type: 'success' })\n      })\n\n    document.querySelector('#name-input').focus();\n  }\n\n  const removePerson = id => {\n    const name = persons.find(person => person.id === id).name\n    if (window.confirm(`Delete ${name}?`)) {\n      personService\n        .remove(id)\n        .then(response => {\n          setPersons(persons.filter(person => person.id !== id))\n          sendNotification({ text: `Deleted ${name}`, type: 'success' })\n        })\n        .catch(err => {\n          setPersons(persons.filter(person => person.id !== id))\n          sendNotification({ text: `Information of ${name} had already been removed from server`, type: 'error' })\n        })\n    }\n  }\n\n  return (\n    <div>\n      <Notification message={message} />\n      <h2>Phonebook</h2>\n      <Filter applyFilter={setFilter} filter={filter} />\n      <h2>add a new</h2>\n      <PersonForm\n        handleOnSubmit={addPerson}\n        handleName={setNewName}\n        handleNumber={setNewNumber}\n        name={newName}\n        number={newNumber} />\n      <h2>Numbers</h2>\n      <Persons selectPersons={selectPersons} removePerson={removePerson} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}